@model BTS.Web.Models.OperatorViewModel
@{
    Layout = null;
}

@using (Html.BeginForm("SaveData", "Operator", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    var addNew = string.IsNullOrEmpty(Model.Id) ? true : false;
    <div class="form-group">
        @Html.LabelFor(model => model.Id, new { @class = "control-label" })
        @if (addNew)
        {
            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", id = "txtID" } })
        }
        else
        {
            @Html.EditorFor(model => model.Id, new { htmlAttributes = new { @class = "form-control", id = "txtID", readOnly = "true" } })
        }

        @Html.ValidationMessageFor(model => model.Id)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Name, new { @class = "control-label" })
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", id = "txtName" } })
        @Html.ValidationMessageFor(model => model.Name)
    </div>

    <div class="form-group">
        <input type="submit" value="Submit" class="btn btn-primary" />
        <input type="reset" value="Reset" class="btn" />
    </div>
}