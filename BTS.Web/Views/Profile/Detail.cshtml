@model BTS.Web.Models.ProfileViewModel
@using BTS.Common
@{
    ViewBag.Title = "Detail";
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Profile", FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return commonController.jQueryAjaxPost(this);", data_restUrl = Url.Action("AddOrEdit", "Profile", new { id = "" }) }))//data-resetUrl
{
    @Html.AntiForgeryToken()
    <div class="row">
        <div class="form-horizontal">
            @Html.ValidationSummary(true)

            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ApplicantID, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.DropDownListFor(model => model.ApplicantID, Model.ApplicantList, " Chọn lựa đơn vị nộp HS ", new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.ApplicantID)
                        </div>
                    </div>
                    <div class="ln_solid"></div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProfileNum, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.ProfileNum, new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.ProfileNum)
                        </div>
                    </div>
                    <div class="ln_solid"></div>
                </div>
            </div>

            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProfileDate, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.ProfileDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.ProfileDate)
                        </div>
                    </div>
                    <div class="ln_solid"></div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ApplyDate, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.ApplyDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.ApplyDate)
                        </div>
                    </div>
                    <div class="ln_solid"></div>
                </div>
            </div>

            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.BtsQuantity, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.BtsQuantity, new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.BtsQuantity)
                        </div>
                    </div>
                    <div class="ln_solid"></div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Fee, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Fee, new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.Fee)
                        </div>
                    </div>
                    <div class="ln_solid"></div>
                </div>
            </div>

            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FeeAnnounceNum, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.FeeAnnounceNum, new { @class = "form-control", disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.FeeAnnounceNum)
                        </div>
                    </div>
                    <div class="ln_solid"></div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FeeAnnounceDate, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.FeeAnnounceDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.FeeAnnounceDate)
                        </div>
                    </div>
                    <div class="ln_solid"></div>
                </div>
            </div>

            <div class="col-md-12 col-sm-12 col-xs-12">
                <div class="col-md-6 col-sm-6 col-xs-12">
                    <div class="form-group">
                        @Html.LabelFor(model => model.FeeReceiptDate, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.FeeReceiptDate, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.FeeReceiptDate)
                        </div>
                    </div>
                    <div class="ln_solid"></div>
                </div>
                <div class="col-md-6 col-sm-6 col-xs-12">

                    <div class="ln_solid"></div>
                </div>
            </div>

            <div class="col-md-10">
                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        @if (User.IsInRole(CommonConstants.Data_CanAdd_Role))
                        {
                            <a class="btn btn-primary" onclick="commonController.refreshAddNewTab('@Url.Action("AddOrEdit", "Profile", new { id = "", act = CommonConstants.Action_Add })',false)"><i class="fa fa-plus"></i> Thêm mới</a>
                        }
                        @if (User.IsInRole(CommonConstants.Data_CanEdit_Role))
                        {
                            <a class="btn btn-success" onclick="commonController.Edit('@Url.Action("AddOrEdit", "Profile", new { id = @Model.Id, act = CommonConstants.Action_Edit })')"><i class="fa fa-pencil"></i> Sửa đổi</a>
                        }

                        @if (User.IsInRole(CommonConstants.Data_CanDelete_Role))
                        {
                            <a class="btn btn-danger" onclick="commonController.Delete('@Url.Action("Delete", "Profile", new { id=@Model.Id})')"><i class="fa fa-trash"></i> Xóa bỏ</a>
                        }

                        <a class="btn btn-info" onclick="commonController.refreshAddNewTab('@Url.Action("AddOrEdit","Profile", new{id = ""})', true)"><i class="fa fa-close"></i> Hủy bỏ</a>
                    </div>
                </div>
            </div>
        </div>
    </div>
}