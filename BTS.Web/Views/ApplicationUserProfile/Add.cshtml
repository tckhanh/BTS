@model BTS.Web.Models.ApplicationUserViewModel
@using BTS.Common

  @if (User.IsInRole(CommonConstants.System_CanAdd_Role))
{
    using (Html.BeginForm("AddOrEdit", "ApplicationUserProfile", new { act = CommonConstants.Action_Add }, FormMethod.Post, new { enctype = "multipart/form-data", onSubmit = "return commonController.jQueryAjaxPost(this);", data_restUrl = Url.Action("AddOrEdit", "ApplicationUserProfile", new { id = "", act = CommonConstants.Action_Add }) }))//data-resetUrl
    {
        @Html.AntiForgeryToken()
        <div class="row">
            <div class="form-horizontal">
                <div class="col-md-9 col-sm-9 col-xs-12">
                    @Html.ValidationSummary(true)
                    @Html.HiddenFor(model => model.Id)
                    @Html.HiddenFor(model => model.ImagePath)

                    <div class="form-group">
                        @Html.LabelFor(model => model.UserName, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UserName)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Password)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ConfirmPassword, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FullName, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.FullName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.FullName)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Email)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PhoneNumber, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PhoneNumber)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Locked, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">
                            @Html.EditorFor(model => model.Locked, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Locked)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GroupList, new { @class = "control-label col-md-3" })
                        <div class="col-md-9">

                            @foreach (var item in Model.GroupList)
                            {
                                <div class="col-md-6">
                                    <label class="control-label">
                                        <input type="checkbox" text="@item.Text" name="selectedItems" value="@item.Value" checked="@item.Selected" class="checkbox-inline" />
                                        @item.Text
                                    </label>
                                </div>
                            }
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">

                            <a class="btn btn-info" onclick="commonController.refreshAddNewTab('@Url.Action("AddOrEdit", "ApplicationUserProfile", new { id = "", act = CommonConstants.Action_Detail })', true)"><i class="fa fa-close"></i> Hủy bỏ</a>

                              @if (User.IsInRole(CommonConstants.System_CanAdd_Role))
                            {
                                <input type="submit" value="Lưu" class="btn btn-primary" />
                            }
                        </div>
                    </div>
                </div>
                <div class="col-md-3 col-sm-3 col-xs-12">
                    @Html.LabelFor(model => model.ImagePath, new { @class = "control-label" })
                    <div class="form-group">
                        @if (!string.IsNullOrEmpty(Model.ImagePath))
                    {
                            <div class="col-md-12">
                                <img src="@Url.Content(Model.ImagePath)" style="margin:10px" height="200" width="150" id="imagePreview" />
                                <input type="file" name="ImageUpload" accept="image/jpeg, image/png" onchange="commonController.ShowImagePreview(this,document.getElementById('imagePreview'))" />
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
    }
}
else
{
    <h3 class="text-danger">Bạn chưa được cấp quyền để thực hiện chức năng này !!!</h3>
}